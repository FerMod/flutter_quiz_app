// This is a basic test.
// https://github.com/dart-lang/test/blob/master/pkgs/test/README.md

import 'dart:convert';

import 'package:flutter_quiz_app/data/models.dart';
import 'package:flutter_test/flutter_test.dart';

void main() {
  group('Encoding and decoding object', () {
    Question question;

    setUpAll(() {
      question = Question(
        id: 1,
        text: 'Is this a question?',
        difficulty: 1,
        rating: 10,
        subject: 'Test',
        options: <Option>[
          Option(value: 'Yes', isCorrect: true),
          Option(value: 'No'),
        ],
      );
    });

    group('Option', () {
      Option option;
      String jsonData;

      setUp(() {
        option = question.options.first;
        jsonData = '{"value":"Yes","isCorrect":true}';
      });

      test('to JSON', () {
        expect(jsonEncode(option), equals(jsonData));
        expect(
          option.toJson(),
          equals(jsonDecode(jsonData)),
          reason: 'Map generated by \'toJson()\' not equal to the one '
              'generated by \'jsonDecode()\'',
        );
      });

      test('from JSON', () {
        var actual = Option.fromMap(jsonDecode(jsonData));
        expect(actual.toJson(), equals(option.toJson()));
      });
    });

    group('Question', () {
      String jsonData;

      setUp(() {
        jsonData = '{"id":1,"text":"Is this a question?","difficulty":1,'
            '"rating":10,"subject":"Test","options":'
            '[{"value":"Yes","isCorrect":true},'
            '{"value":"No","isCorrect":false}]}';
      });

      test('to JSON', () {
        expect(jsonEncode(question), equals(jsonData));
        expect(
          question.toJson(),
          equals(jsonDecode(jsonData)),
          reason: 'Map generated by \'toJson()\' not equal to the one '
              'generated by \'jsonDecode()\'',
        );
      });

      test('from JSON', () {
        var actual = Question.fromMap(jsonDecode(jsonData));
        expect(actual.toJson(), equals(question.toJson()));
      });
    });
  });
}
